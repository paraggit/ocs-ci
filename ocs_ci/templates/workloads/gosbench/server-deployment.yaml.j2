apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ server_name }}
  namespace: {{ namespace }}
  labels:
    app: {{ server_name }}
    component: gosbench-server
    workload: {{ workload_name | default("gosbench") }}
    version: {{ version | default("latest") }}
{% if custom_labels %}
{%- for key, value in custom_labels.items() %}
    {{ key }}: {{ value }}
{%- endfor %}
{% endif %}
{% if annotations %}
  annotations:
{%- for key, value in annotations.items() %}
    {{ key }}: {{ value }}
{%- endfor %}
{% endif %}
spec:
  replicas: {{ server_replicas | default(1) }}
  selector:
    matchLabels:
      app: {{ server_name }}
  template:
    metadata:
      labels:
        app: {{ server_name }}
        component: gosbench-server
        workload: {{ workload_name | default("gosbench") }}
{% if custom_pod_labels %}
{%- for key, value in custom_pod_labels.items() %}
        {{ key }}: {{ value }}
{%- endfor %}
{% endif %}
      annotations:
        s3-endpoint: {{ s3_endpoint_host }}
{% if custom_pod_annotations %}
{%- for key, value in custom_pod_annotations.items() %}
        {{ key }}: {{ value }}
{%- endfor %}
{% endif %}
    spec:
{% if node_selector %}
      nodeSelector:
{%- for key, value in node_selector.items() %}
        {{ key }}: {{ value }}
{%- endfor %}
{% endif %}
{% if tolerations %}
      tolerations:
{%- for toleration in tolerations %}
        - key: {{ toleration.key }}
          operator: {{ toleration.operator | default("Equal") }}
{%- if toleration.value %}
          value: {{ toleration.value }}
{%- endif %}
          effect: {{ toleration.effect }}
{%- if toleration.tolerationSeconds %}
          tolerationSeconds: {{ toleration.tolerationSeconds }}
{%- endif %}
{%- endfor %}
{% endif %}
{% if affinity %}
      affinity:
{{ affinity | to_nice_yaml | indent(8, True) }}
{% endif %}
{% if security_context %}
      securityContext:
{{ security_context | to_nice_yaml | indent(8, True) }}
{% endif %}
{% if service_account %}
      serviceAccountName: {{ service_account }}
{% endif %}
{% if image_pull_secrets %}
      imagePullSecrets:
{%- for secret in image_pull_secrets %}
        - name: {{ secret }}
{%- endfor %}
{% endif %}
      containers:
        - name: server
          image: {{ image | default("ghcr.io/mulbc/gosbench:latest") }}
{% if image_pull_policy %}
          imagePullPolicy: {{ image_pull_policy }}
{% endif %}
          args:
            - server
            - -c
            - /cfg/gosbench.yaml
{% if server_extra_args %}
{%- for arg in server_extra_args %}
            - {{ arg }}
{%- endfor %}
{% endif %}
          env:
            - name: S3_ENDPOINT
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['s3-endpoint']
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ secret_name }}
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ secret_name }}
                  key: AWS_SECRET_ACCESS_KEY
{% if extra_env_vars %}
{%- for env_var in extra_env_vars %}
            - name: {{ env_var.name }}
{%- if env_var.value %}
              value: {{ env_var.value }}
{%- elif env_var.valueFrom %}
              valueFrom:
{{ env_var.valueFrom | to_nice_yaml | indent(16, True) }}
{%- endif %}
{%- endfor %}
{% endif %}
          volumeMounts:
            - name: cfg
              mountPath: /cfg
{% if extra_volume_mounts %}
{%- for mount in extra_volume_mounts %}
            - name: {{ mount.name }}
              mountPath: {{ mount.mountPath }}
{%- if mount.subPath %}
              subPath: {{ mount.subPath }}
{%- endif %}
{%- if mount.readOnly %}
              readOnly: {{ mount.readOnly }}
{%- endif %}
{%- endfor %}
{% endif %}
          ports:
            - containerPort: {{ control_port | default(2000) }}
              name: control
              protocol: TCP
            - containerPort: {{ metrics_port | default(2112) }}
              name: metrics
              protocol: TCP
{% if extra_ports %}
{%- for port in extra_ports %}
            - containerPort: {{ port.containerPort }}
              name: {{ port.name }}
              protocol: {{ port.protocol | default("TCP") }}
{%- endfor %}
{% endif %}
{% if health_checks %}
{% if health_checks.liveness %}
          livenessProbe:
{{ health_checks.liveness | to_nice_yaml | indent(12, True) }}
{% endif %}
{% if health_checks.readiness %}
          readinessProbe:
{{ health_checks.readiness | to_nice_yaml | indent(12, True) }}
{% endif %}
{% if health_checks.startup %}
          startupProbe:
{{ health_checks.startup | to_nice_yaml | indent(12, True) }}
{% endif %}
{% endif %}
          resources:
            requests:
              memory: {{ server_memory_request | default("256Mi") }}
              cpu: {{ server_cpu_request | default("100m") }}
{% if server_ephemeral_storage_request %}
              ephemeral-storage: {{ server_ephemeral_storage_request }}
{% endif %}
            limits:
              memory: {{ server_memory_limit | default("512Mi") }}
              cpu: {{ server_cpu_limit | default("500m") }}
{% if server_ephemeral_storage_limit %}
              ephemeral-storage: {{ server_ephemeral_storage_limit }}
{% endif %}
{% if container_security_context %}
          securityContext:
{{ container_security_context | to_nice_yaml | indent(12, True) }}
{% endif %}
      volumes:
        - name: cfg
          configMap:
            name: {{ config_name }}
            items:
              - key: gosbench.yaml
                path: gosbench.yaml
{% if extra_volumes %}
{%- for volume in extra_volumes %}
        - name: {{ volume.name }}
{{ volume.spec | to_nice_yaml | indent(10, True) }}
{%- endfor %}
{% endif %}
{% if restart_policy %}
      restartPolicy: {{ restart_policy }}
{% endif %}
{% if dns_policy %}
      dnsPolicy: {{ dns_policy }}
{% endif %}
{% if dns_config %}
      dnsConfig:
{{ dns_config | to_nice_yaml | indent(8, True) }}
{% endif %}
